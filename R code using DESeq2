##R Code For Differential Gene Expression Using DESeq2##
## Maynard et al. (2018) Transcriptomic responses to extreme low salinity among locally adapted populations of Olympia oyster (Ostrea lurida) 
## code is developed from http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#countmat
## since we have raw exon counts from analyses performed in CLC Genomics, we can go straight to normalization and statistics

##Begin by loading the DESeq2 library into R
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(DESeq2)

##Change the working directory to appropriate folder with all the necessary input files

##Read in raw count data## DESeq2 requires raw count data as input
##format should be samples in columns and each gene in row, with A1 cell blank. The matrix is then the raw counts using only integers (no decimals)
cts<-as.matrix(read.table("REVISED O.lurida_raw_counts.txt",header=TRUE,row.names=1, sep="\t"))

##Check dimensions of read table to ensure accurate
head (cts)
dim(cts)

##Read in the sample identification (i.e. sample metadata). Each column is a different factor with samples correspnding to the first row of the raw count data in the 

first column
coldata<-read.table("REVISED Bioconditions_file.txt",header=TRUE,row.names=1,sep="\t")

##check table count data and coldata dimensions (must be equal i.e. each sample has corresponding information in the coldata file)
nrow(coldata)
ncol(coldata)

## set the factors present in the coldata file
coldata <- coldata[,c("Salinity","Population")]

##with the count matrix, cts, and the sample information, coldata, we can construct a DESeqDataSet.
##First term is always control. Second term is factor of interest.
##Differential analysis are performed by DESeq function and results table generated by the results function


##To determine transcripts responding to SALINITY in all populations (i.e. conserved response to salinity) 
dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata,design = ~ Population + Salinity)
dds <- DESeq(dds)
res <- results(dds)
write.table(res,"REVISED O.lurida_pvalues_SALINITY.txt",quote=FALSE,col.names=TRUE,row.names=TRUE,sep="\t")


##To determine transcripts constitutively expressed at different levels in LL compared with OP and M
##this test uses factor tolerance with levels tolerant (LL oysters) and not tolerant (OP and M oysters)
##this therefore requires a new bioconditions file with different sample assignments

cts<-as.matrix(read.table("REVISED POP ONLY O.lurida_raw_counts.txt",header=TRUE,row.names=1, sep="\t"))

##Check dimensions of table
head (cts)
dim(cts)

##Read in the sample identification (i.e. sample metadata). Each column is a different factor with samples correspnding to the first row of the raw count data in the 

first column
coldata<-read.table("REVISED POP ONLY Bioconditions_file.txt",header=TRUE,row.names=1,sep="\t")

##check coldata table (must be equal i.e. each sample has corresponding information in the coldata file)
nrow(coldata)
ncol(coldata)

## set the factors present in the coldata file
coldata <- coldata[,c("Salinity","Tolerance")]

##with the count matrix, cts, and the sample information, coldata, we can construct a DESeqDataSet.
##First term is always control. Second term is factor of interest.
##Differential analysis are performed by DESeq function and results table generated by the results function

dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata,design = ~ Salinity + Tolerance)
dds$group <- factor(paste0(dds$Tolerance, dds$Salinity))
design(dds) <- ~ group
dds <- DESeq(dds)
res<-results(dds, contrast=c("group","MControl","OPControl"))
write.table(res,"NEW REVISED O.lurida_pvalues_LLvsOPM.txt",quote=FALSE,col.names=TRUE,row.names=TRUE,sep="\t")

##To determine transcripts responding to SALINITY in a POPULATION specific manner (SALINITY X POPULATION) 
cts<-as.matrix(read.table("REVISED O.lurida_raw_counts.txt",header=TRUE,row.names=1, sep="\t"))

##Check dimensions of read table to ensure accurate
head (cts)
dim(cts)

##Read in the sample identification (i.e. sample metadata). Each column is a different factor with samples correspnding to the first row of the raw count data in the 

first column
coldata<-read.table("REVISED Bioconditions_file.txt",header=TRUE,row.names=1,sep="\t")

##check table count data and coldata dimensions (must be equal i.e. each sample has corresponding information in the coldata file)
nrow(coldata)
ncol(coldata)

## set the factors present in the coldata file
coldata <- coldata[,c("Salinity","Population")]

##with the count matrix, cts, and the sample information, coldata, we can construct a DESeqDataSet.
##First term is always control. Second term is factor of interest. Terms separated by colon indicates interaction.
##Differential analysis are performed by DESeq function and results table generated by the results function

dds <- DESeqDataSetFromMatrix(countData = cts, colData = coldata,design = ~ Population + Salinity + Population:Salinity)
dds <- DESeq(dds)
res <- results(dds)
write.table(res,"REVISED O.lurida_pvalues_SALxPOP.txt",quote=FALSE,col.names=TRUE,row.names=TRUE,sep="\t")

##this code will export the normalized counts from DESeq2 (NOT Log Transformed).
normalized <- counts(dds, normalized=TRUE)
write.table(normalized,"O.lurida_normalized_counts.txt",quote=FALSE,col.names=TRUE,row.names=TRUE,sep="\t")

##to export log normalized counts for graphing/clustering
rld <- rlog(dds, blind=FALSE)
log<-assay(rld)
write.table(log,"O.lurida_logtransformed_counts.txt",quote=FALSE,col.names=TRUE,row.names=TRUE,sep="\t")

##for principle components analysis using ggbiplots package. Use log transformed data.
##Perform immediately after log transformation
plotPCA(rld, intgroup=c("Population","Salinity"))
